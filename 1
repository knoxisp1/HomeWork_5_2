"""
                                        Задание 5_1.(Атрибуты и методы объекта.)
Задача "Developer - не только разработчик":
Реализуйте класс House, объекты которого будут создаваться следующим образом:
House('ЖК Эльбрус', 30)
Объект этого класса должен обладать следующими атрибутами:
self.name - имя, self.number_of_floors - кол-во этажей
Также должен обладать методом go_to(new_floor), где new_floor - номер этажа(int), на который нужно приехать.
Метод go_to выводит на экран(в консоль) значения от 1 до new_floor(включительно).
Если же new_floor больше чем self.number_of_floors или меньше 1, то вывести строку "Такого этажа не существует".
Пункты задачи:
Создайте класс House.
Вунтри класса House определите метод __init__, в который передадите название и кол-во этажей.
Внутри метода __init__ создайте атрибуты объекта self.name и self.number_of_floors, присвойте им переданные значения.
Создайте метод go_to с параметром new_floor и напишите логику внутри него на основе описания задачи.
Создайте объект класса House с произвольным названием и количеством этажей.
Вызовите метод go_to у этого объекта с произвольным числом.

                                         *******************
Задача "Магические здания":
Для решения этой задачи будем пользоваться решением к предыдущей задаче "Атрибуты и методы объекта".

Необходимо дополнить класс House следующими специальными методами:
__len__(self) - должен возвращать кол-во этажей здания self.number_of_floors.
__str__(self) - должен возвращать строку: "Название: <название>, кол-во этажей: <этажи>".

"""


class House: #Создаем класс House 
    def __init__(self, name, number_of_floors): #Определяем метод init в котом передаем название и количетсво этажей
        self.name = name 
        self.numbers_of_floors = number_of_floors

    def go_to(self, new_floor): #Создаем метод go_to c параметром new floor 
        floor = 0
        if new_floor < 1 or new_floor > self.numbers_of_floors: #Если же new_floor больше чем self.number_of_floors или меньше 1.
            print('Такого этажа не существует') #Выводим строку "Такого этажа не существует"
        else: #иначе
            for floor in range(new_floor):
                print(floor + 1) 

    def __str__(self):
        return f'Название:{self.name},количество этажей:{self.numbers_of_floors}' #Выводим строку
#Дополняем класс
    def __len__(self): 
        return self.numbers_of_floors #Возращаем количество этажей здания


h1 = House('ЖК Эльбрус', 10)
h2 = House('ЖК Акация', 20)
# __str__
print(h1)
print(h2)
# __len__
print(len(h1))
print(len(h2))
